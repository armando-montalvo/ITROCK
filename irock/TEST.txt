ACCESO Y DESPLEGADO DE DATOS

1.- SELECT ENAME,HIREDATE FROM EMP;
2.- SELECT HIREDATE,ENAME FROM EMP;
3.- SELECT ENAME AS EMPLOYEE FROM EMP WHERE SAL>2000;
4.- SELECT ENAME FROM EMP WHERE JOB NOT IN ("CLERK","SALESMAN") ORDER BY ENAME ASC;
5.- select ENAME from EMP where ENAME LIKE '%s%';
6.- SELECT ENAME AS Name, SAL AS Salary FROM EMP WHERE SAL<COMM;
7.- SELECT * FROM EMP WHERE YEAR(HIREDATE)=1981;
8.- SELECT ENAME, JOB FROM EMP WHERE DEPTNO IN (10,20);

USE LAS TABLAS NATION E INVENTION PARA COMPLETAR LOS EJERCICIOS FALTANTES

9.- SELECT INVENTION,YEAR FROM INVENTION WHERE INVENTOR="Edison";
10.- SELECT NATION FROM NATION WHERE CAPITAL IN ("Wellington","Georgetown");
11.- select NATION from NATION where POPULATION between 230000 and 820000 order by NATION asc;
12.- SELECT INVENTOR, INVENTION FROM INVENTION WHERE YEAR NOT BETWEEN 1800 AND 1900 ORDER BY INVENTION ASC;




CREACION Y MANTENIMIENTO A TABLAS Y VISTAS

1.- CREATE table EMPTEST SELECT * FROM EMP;
2.- ALTER table EMPTEST ADD SEX VARCHAR(1);
3.- ALTER table EMPTEST MODIFY COLUMN SEX VARCHAR(6);
4.- CREATE VIEW emp_no_money AS SELECT empno, ename, job, mgr, hiredate, deptno FROM EMP;
5.- SELECT table_schema, table_name, view_definition FROM information_schema.views WHERE table_name="emp_no_money";
6.- SELECT ename,hiredate  FROM emp_no_money;
7.- SELECT ename, sal from emp_no_money;     No sale la columna de comisiones
8.- CREATE VIEW EMP_DEPTNO_TEN AS SELECT (name,dno,eno) AS SELECT ename,deptno,empno FROM emp WHERE deptno=10;
9.- CREATE VIEW EMP_DEPTNO_TEN (name,dno,eno) as select ename,deptno,empno from EMP where deptno=10;
10.- DROP VIEW EMP_DEPTNO_TEN



INSERT, UPDATE, DELETE Y UPDATE DE DATOS

1.- INSERT INTO EMP (EMPNO,ENAME,JOB,HIREDATE,SAL,DEPTNO) VALUES (7801,"MARIO","ENGINEER",'1995-04-22',2500,20);
2.- INSERT INTO DEPT (DEPTNO,DNAME,LOC) VALUES (99,"Maui","EDUCATION");
3.-update EMP set SAL=SAL+1000 WHERE ENAME="MARIO";
4.- DELETE FROM EMP WHERE ENAME="MARIO";
5.-CREATE VIEW EMP_DEPTNO_TEN AS SELECT (name,dno,eno) AS SELECT ename,deptno,empno FROM emp WHERE deptno=10;
6.- SELECT * FROM EMP_DEPTNO_TEN;
7.- INSERT INTO EMP (EMPNO,ENAME,JOB,HIREDATE,SAL,COMM,DEPTNO) VALUES (7521,"JUAN","ENGINEER",'1995-04-22',2000,500,40);
8.-



REFERENCIA A TIPOS DE DATO Y FUNCIONES EN CONSULTAS

1.- UPDATE INVENTION SET INVENTION=UPPER(INVENTION);
2.- SELECT TIMESTAMPDIFF(MONTH,HIREDATE,CURDATE()) as A FROM EMP;
3.- SELECT ENAME, SAL+COMM AS CompTot, DATE_FORMAT(HIREDATE,'%D of %b, %Y') as HireDate FROM EMP WHERE SAL>2*COMM;
4.- SELECT LOWER(ENAME) AS NAME, SAL/100 AS SAL_per_100 from EMP;  
5.- SELECT YEAR(CURDATE())-YEAR AS YEARS FROM INVENTION WHERE INVENTION LIKE '%COI%';
6.- SELECT CONCAT(LEFT(INVENTOR,8),' invented the ',LOWER(INVENTION)) AS Invention FROM INVENTION WHERE INVENTION LIKE '%MACHINE%';
7.- SELECT ENAME FROM EMP WHERE COMM IS NOT NULL;
8.- SELECT CONCAT(ENAME,' gana ',SAL,' pero quiere ',SAL*3) AS Sentence FROM EMP;




RECUPERE RENGLONES BASANDOSE EN GRUPOS

1.- SELECT MAX(YEAR) AS Recent_Year, MIN(YEAR) AS Later_Year FROM INVENTION;
2.- SELECT COUNT(INVENTION) AS NoOfInventions FROM INVENTION;
3.- SELECT MAX(NATION_CODE) NATION_CODE_COUNTRIES FROM INVENTION GROUP BY NATION_CODE;
4.- SELECT INVENTOR, NATION_CODE FROM INVENTION GROUP BY NATION_CODE, INVENTOR;
5.- SELECT LEFT(NATION,1) AS Nations, SUM(AREA) AS Area FROM NATION WHERE LEFT(NATION,1) IN ("A","B","C") GROUP BY LEFT(NATION,1);




JOIN DE MULTIPLES TABLAS

1.- SELECT E.ENAME, D.LOC, E.DEPTNO FROM EMP AS E JOIN DEPT AS D ON E.DEPTNO=D.DEPTNO;
2.- SELECT I.INVENTOR, N.NATION FROM INVENTION AS I JOIN NATION AS N ON I.NATION_CODE=N.CODE WHERE LEFT(I.INVENTOR,1)="B";
3.- SELECT COUNT(I.NATION_CODE) AS NO_OF_INVENTIONS, N.NATION FROM INVENTION AS I JOIN NATION AS N ON I.NATION_CODE=N.CODE GROUP BY NATION_CODE;
4.- SELECT INVENTION, YEAR FROM INVENTION WHERE YEAR IN (SELECT YEAR FROM INVENTION WHERE INVENTOR LIKE '%Ben%');
5.- SELECT N.NATION, N.AREA FROM NATION AS N JOIN BORDER AS B ON N.CODE=B.NATION_CODE GROPU BY NATION ASC HAVING N.NORTH IS NOT NULL,N.EAST IS NOT NULL, N.WEST IS NOT NULL
6.- SELECT N.NATION, N.AREA, COUNT(B.NATION_CODE) AS Count FROM NATION AS N JOIN BORDER AS B ON B.NATION_CODE=N.CODE GROUP BY B.NATION_CODE HAVING COUNT(B.NATION_CODE)>3;
7.- SELECT NATION, POPULATION FROM NATION WHERE NATION NOT IN (SELECT NATION FROM NATION JOIN BORDER ON NATION_CODE=CODE) AND AREA>=(SELECT AREA FROM NATION WHERE NATION="Japan");
8.- SELECT NATION, NATION_CODE, BORDER_CODE FROM NATION RIGHT JOIN BORDER ON NATION_CODE=CODE;
